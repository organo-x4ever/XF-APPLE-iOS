<?xml version="1.0" encoding="utf-8" ?>
<media:AudioPlayerPageXaml
    xmlns:media="clr-namespace:com.organo.x4ever.Pages.Media"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:com.organo.x4ever.Controls;assembly=com.organo.x4ever"
    xmlns:converters="clr-namespace:com.organo.x4ever.Converters"
    xmlns:statics="clr-namespace:com.organo.x4ever.Statics;assembly=com.organo.x4ever"
    xmlns:localization="clr-namespace:com.organo.x4ever.Localization;assembly=com.organo.x4ever"
    x:Class="com.organo.x4ever.Pages.Media.AudioPlayerPage">
    <StackLayout VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand">
        <controls:TopBarAccountView></controls:TopBarAccountView>
        <StackLayout Orientation="Vertical" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" Margin="15,15,15,0" IsVisible="{Binding IsEditable}">
            <Frame Style="{DynamicResource frameStyle}" HasShadow="False" IsVisible="{Binding IsPermissionGranted}">
                <StackLayout Orientation="Vertical" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand">
                    <Label HorizontalOptions="Center" HorizontalTextAlignment="Center" VerticalOptions="Start" Text="{Binding CurrentTimer}" Style="{DynamicResource labelStyleXXLargeHeader}" />
                    <Grid VerticalOptions="Start" HorizontalOptions="FillAndExpand" Margin="5,10,5,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" HorizontalOptions="StartAndExpand" VerticalOptions="End" Text="{Binding MediaTitle}" Style="{DynamicResource labelTimer}" FontAttributes="None" LineBreakMode="TailTruncation" TextColor="{x:Static statics:Palette._LightGrayD}" />
                        <Label Grid.Row="0" Grid.Column="1" HorizontalOptions="End" VerticalOptions="End" Text="{Binding TotalTimer}" Style="{DynamicResource labelTimer}" TextColor="{x:Static statics:Palette._LightGrayD}" />
                    </Grid>
                    <Slider x:Name="SliderCurrentPosition" Minimum="0" Maximum="100" Value="{Binding CurrentPosition, Mode=OneWay}" HorizontalOptions="FillAndExpand" />
                    <Grid HorizontalOptions="CenterAndExpand" VerticalOptions="CenterAndExpand">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="40" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="1" Source="{Binding PreviousButton}" IsEnabled="{Binding IsMediaExists}" HeightRequest="{Binding AudioCommandImageHeight}" WidthRequest="{Binding AudioCommandImageWidth}" Margin="3,0">
                            <Image.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding PreviousCommand}" />
                            </Image.GestureRecognizers>
                        </Image>
                        <Image Grid.Column="2" Source="{Binding PlayPauseButton}" HeightRequest="{Binding AudioCommandImageHeight}" WidthRequest="{Binding AudioCommandImageWidth}" Margin="5,0">
                            <Image.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding PlayCommand}" />
                            </Image.GestureRecognizers>
                        </Image>
                        <Image Grid.Column="3" Source="{Binding NextButton}" IsEnabled="{Binding IsMediaExists}" HeightRequest="{Binding AudioCommandImageHeight}" WidthRequest="{Binding AudioCommandImageWidth}" Margin="3,0">
                            <Image.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding NextCommand}" />
                            </Image.GestureRecognizers>
                        </Image>
                    </Grid>
                </StackLayout>
            </Frame>
            <StackLayout VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" BackgroundColor="{x:Static statics:Palette._Transparent}" Margin="5,10,5,0">
                <StackLayout Orientation="Horizontal" VerticalOptions="Start" HorizontalOptions="FillAndExpand" Margin="0,5,5,2" IsEnabled="{Binding IsMediaExists}">
                    <Image Source="{Binding ChecklistImage}" HeightRequest="16" WidthRequest="16" Margin="0" HorizontalOptions="Start" VerticalOptions="Center">
                        <Image.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ChecklistImageCommand}" />
                        </Image.GestureRecognizers>
                    </Image>
                    <Label Style="{Binding PlaylistTextStyle}" Text="{localization:Translate Playlist}" HorizontalOptions="StartAndExpand" VerticalOptions="Center">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ChecklistImageCommand}" />
                        </Label.GestureRecognizers>
                    </Label>
                    <Image Source="{Binding SortImage}" HeightRequest="16" WidthRequest="16" Margin="0" HorizontalOptions="End" VerticalOptions="Center">
                        <Image.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding SortCommand}" />
                        </Image.GestureRecognizers>
                    </Image>
                    <Label Style="{Binding PlaylistTextStyleDefault}" Text="{Binding SortBy}" HorizontalOptions="End" VerticalOptions="Center">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding SortCommand}" />
                        </Label.GestureRecognizers>
                    </Label>
                </StackLayout>
                <StackLayout VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" IsVisible="{Binding IsMessageExists}">
                    <ListView x:Name="listView" HasUnevenRows="False" SeparatorVisibility="None" ItemsSource="{Binding Messages}" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" BackgroundColor="{x:Static statics:Palette._Transparent}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ViewCell>
                                    <Label Text="{Binding Text}" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand" Margin="0,5,0,5" />
                                </ViewCell>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackLayout>
                <StackLayout Orientation="Vertical" VerticalOptions="StartAndExpand" HorizontalOptions="CenterAndExpand">
                    <ActivityIndicator IsRunning="{Binding IsBusy}" IsVisible="{Binding IsBusy}" />
                    <Label IsVisible="{Binding IsBusy}" Text="{Binding BusyMessage}" Style="{DynamicResource labelBusyMessage}" />
                    <Label IsVisible="{Binding IsError}" Text="{Binding ErrorMessage}" Style="{DynamicResource labelErrorMessage}" />
                    <Label IsVisible="{Binding IsMessage}" Text="{Binding MessageText}" Style="{DynamicResource labelSuccessMessage}" />
                </StackLayout>
                <ListView x:Name="ListViewPlayer" HasUnevenRows="True" SeparatorVisibility="None" ItemsSource="{Binding MusicFiles}" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" 
                          ItemSelected="ListView_OnItemSelected" BackgroundColor="{x:Static statics:Palette._Transparent}" RefreshAllowed="True" IsPullToRefreshEnabled="True" IsRefreshing="{Binding IsRefreshing}" RefreshCommand="{Binding RefreshCommand}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <ViewCell>
                                <StackLayout Orientation="Vertical" HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand" Padding="0,7,0,7">
                                    <Label HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand" VerticalTextAlignment="Center" HorizontalTextAlignment="Start"
                                           Text="{Binding Title}" Style="{DynamicResource labelStyleSmall}" LineBreakMode="TailTruncation" Margin="0" TextColor="{Binding TextColor}" />
                                    <Grid Margin="0,-4,0,0" HorizontalOptions="FillAndExpand" VerticalOptions="CenterAndExpand">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Row="0" Grid.Column="0" HorizontalOptions="StartAndExpand" VerticalOptions="CenterAndExpand" Text="{Binding Artist}" Style="{DynamicResource labelStyleXXSmall}" LineBreakMode="TailTruncation" />
                                        <Label Grid.Row="0" Grid.Column="1" HorizontalOptions="Center" VerticalOptions="Center" Text=" | " Style="{DynamicResource labelStyleXXSmall}" />
                                        <Label Grid.Row="0" Grid.Column="2" HorizontalOptions="StartAndExpand" VerticalOptions="CenterAndExpand" Text="{Binding Album}" Style="{DynamicResource labelStyleXXSmall}" LineBreakMode="TailTruncation" />
                                        <Label Grid.Row="0" Grid.Column="3" HorizontalOptions="Center" VerticalOptions="Center" Text=" | " Style="{DynamicResource labelStyleXXSmall}" />
                                        <Label Grid.Row="0" Grid.Column="4" HorizontalOptions="StartAndExpand" VerticalOptions="CenterAndExpand" Text="{Binding _DurationTimeSpan}" Style="{DynamicResource labelStyleXXSmall}" LineBreakMode="TailTruncation" />
                                    </Grid>
                                </StackLayout>
                            </ViewCell>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.Footer>
                        <controls:FooterView Margin="0,20,0,0" />
                    </ListView.Footer>
                </ListView>
            </StackLayout>
        </StackLayout>
    </StackLayout>
    <media:AudioPlayerPageXaml.Resources>
        <ResourceDictionary>
            <converters:SplitStringConverter x:Key="SplitConverter" />
        </ResourceDictionary>
    </media:AudioPlayerPageXaml.Resources>
</media:AudioPlayerPageXaml>